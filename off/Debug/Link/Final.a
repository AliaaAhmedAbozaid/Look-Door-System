;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;unsigned char keypad();
;unsigned char EE_Read(unsigned int address);
;void EE_Write(unsigned int address, unsigned int data);
;void Store();
;int  checkID(unsigned int id);
;int checkPASS(unsigned int id, unsigned int pass);
;int changePASS(unsigned int id, unsigned int npass);
;int check_PASS_Admin(unsigned int pass);
;int read();
;void peep();
;void main(void)
; 0000 0013 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0014 
; 0000 0015 
; 0000 0016 DDRB = 0b00000111;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0017 PORTB = 0b11111000;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0018 //DDRB.0 = 1;
; 0000 0019 DDRC.1 = 1;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 001A PORTC.1 = 0;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 001B DDRD.4 = 1;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001C PORTD.4 = 0;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 001D 
; 0000 001E //PORTC.0=0;
; 0000 001F DDRD.2 = 0;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0020 PORTD.2 = 1;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0021 DDRD.3 = 0;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0022 PORTD.3 = 1;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0023 SREG.7 = 1;
;PCODE: $00000022 VOL: 0
; 0000 0024 MCUCR |= (1 << 1);  //falling
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0025 MCUCR |= (1 << 3);  //falling
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0026 MCUCR &= ~(1 << 0);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0027 MCUCR &= ~(1 << 2);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0028 GICR |= (1 << 6);//intrrupt_0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0029 GICR |= (1 << 7);//intrrupt_1
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 002A DDRD.5 = 1;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 002B PORTD.5 = 0;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 002C 
; 0000 002D 
; 0000 002E 
; 0000 002F 
; 0000 0030 
; 0000 0031 //...end */
; 0000 0032 lcd_init(16);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0033 
; 0000 0034 lcd_puts("press * to start,please");
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0035 //Store();
; 0000 0036 while (1)
;PCODE: $0000003E VOL: 0
; 0000 0037 {
; 0000 0038 char num = keypad();
; 0000 0039 int c1 = 0;
; 0000 003A int c2 = 0;
; 0000 003B lcd_clear();
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;	num -> Y+4
;	c1 -> Y+2
;	c2 -> Y+0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 003C 
; 0000 003D if(num == '*')
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 003E {
; 0000 003F 
; 0000 0040 PORTC.1 = 0;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0041 PORTD.4=0;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0042 
; 0000 0043 lcd_puts("Enter your ID");
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0044 
; 0000 0045 c1 = read();
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0046 delay_ms(500);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0047 lcd_clear();
;PCODE: $00000059 VOL: 0
; 0000 0048 
; 0000 0049 if(checkID(c1) == 1)
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 004A {
; 0000 004B lcd_clear();
;PCODE: $0000005E VOL: 0
; 0000 004C lcd_puts("Enter your PC");
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 004D 
; 0000 004E c2 = read();
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 004F delay_ms(500);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0050 lcd_clear();
;PCODE: $00000066 VOL: 0
; 0000 0051 if(checkPASS(c1, c2) == 1)
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0052 {
; 0000 0053 switch(c1)
;PCODE: $0000006D VOL: 0
; 0000 0054 {
; 0000 0055 case 111:
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0056 lcd_puts("Welcome, Prof ");
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0057 break;
;PCODE: $00000074 VOL: 0
; 0000 0058 case 126:
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0059 
; 0000 005A lcd_puts("Welcome, Ahmed ");
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 005B break;
;PCODE: $0000007C VOL: 0
; 0000 005C case 128:
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 005D lcd_puts("Welcome, Amr ");
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 005E break;
;PCODE: $00000084 VOL: 0
; 0000 005F case 130:
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0060 lcd_puts("Welcome, Adel ");
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0061 break;
;PCODE: $0000008C VOL: 0
; 0000 0062 case 132:
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0063 lcd_puts("Welcome, Omar ");
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0064 break;
;PCODE: $00000094 VOL: 0
; 0000 0065 }
;PCODE: $00000095 VOL: 0
; 0000 0066 delay_ms(500);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0067 lcd_clear();
;PCODE: $00000098 VOL: 0
; 0000 0068 PORTD.4=1;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0069 delay_ms(1500);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 006A lcd_puts("Door is open");
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 006B PORTD.4=0;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 006C 
; 0000 006D 
; 0000 006E 
; 0000 006F 
; 0000 0070 }
; 0000 0071 else
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0072 {
; 0000 0073 lcd_puts("Sorry wrong password ");
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0074 delay_ms(500);
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0075 lcd_clear();
;PCODE: $000000A9 VOL: 0
; 0000 0076 
; 0000 0077 PORTC.1 = 1;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 0078 delay_ms(2000);
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0079 PORTC.1 = 0;     //one peep instead of turning on lamp
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 007A delay_ms(2000);
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 007B }
;PCODE: $000000B2 VOL: 0
; 0000 007C }
; 0000 007D 
; 0000 007E else
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 007F {
; 0000 0080 lcd_puts("Sorry wrong ID ");
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0081 delay_ms(1000);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 0082 peep();
;PCODE: $000000BA VOL: 0
; 0000 0083 }
;PCODE: $000000BB VOL: 0
; 0000 0084 }
; 0000 0085 }
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 0086 
; 0000 0087 }
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0

	.DSEG
_0x17:
	.BYTE 0xB2
;unsigned char keypad()
; 0000 008B {

	.CSEG
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 008C while(1)
;PCODE: $000000C5 VOL: 0
; 0000 008D {
; 0000 008E PORTB.0 = 0; PORTB.1 = 1; PORTB.2 = 1;
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 008F //Only B1 is activated
; 0000 0090 switch(PINB)
;PCODE: $000000CC VOL: 0
; 0000 0091 {
; 0000 0092 case 0b11110110:
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 0093 while (PINB.3 == 0);
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0094 return 1;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 0095 break;
;PCODE: $000000D7 VOL: 0
; 0000 0096 
; 0000 0097 case 0b11101110:
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0098 while (PINB.4 == 0);
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0099 return 4;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 009A break;
;PCODE: $000000E3 VOL: 0
; 0000 009B 
; 0000 009C case 0b11011110:
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 009D while (PINB.5 == 0);
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 009E return 7;
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 009F break;
;PCODE: $000000EF VOL: 0
; 0000 00A0 
; 0000 00A1 case 0b10111110:
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 00A2 while (PINB.6 == 0);
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 00A3 return '*';
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 00A4 break;
;PCODE: $000000FB VOL: 0
; 0000 00A5 
; 0000 00A6 }
;PCODE: $000000FC VOL: 0
; 0000 00A7 PORTB.0 = 1; PORTB.1 = 0; PORTB.2 = 1;
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 00A8 //Only B2 is activated
; 0000 00A9 switch(PINB)
;PCODE: $00000103 VOL: 0
; 0000 00AA {
; 0000 00AB case 0b11110101:
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 00AC while (PINB.3 == 0);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 00AD return 2;
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 00AE break;
;PCODE: $0000010E VOL: 0
; 0000 00AF 
; 0000 00B0 case 0b11101101:
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00B1 while (PINB.4 == 0);
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 00B2 return 5;
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00B3 break;
;PCODE: $0000011A VOL: 0
; 0000 00B4 
; 0000 00B5 case 0b11011101:
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 00B6 while (PINB.5 == 0);
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 00B7 return 8;
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 00B8 break;
;PCODE: $00000126 VOL: 0
; 0000 00B9 
; 0000 00BA case 0b10111101:
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 00BB while (PINB.6 == 0);
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00BC return 0;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 00BD break;
;PCODE: $00000132 VOL: 0
; 0000 00BE 
; 0000 00BF }
;PCODE: $00000133 VOL: 0
; 0000 00C0 PORTB.0 = 1; PORTB.1 = 1; PORTB.2 = 0;
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 00C1 //Only B3 is activated
; 0000 00C2 switch(PINB)
;PCODE: $0000013A VOL: 0
; 0000 00C3 {
; 0000 00C4 case 0b11110011:
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 00C5 while (PINB.3 == 0);
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 00C6 return 3;
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 00C7 break;
;PCODE: $00000145 VOL: 0
; 0000 00C8 
; 0000 00C9 case 0b11101011:
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00CA while (PINB.4 == 0);
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 00CB return 6;
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 00CC break;
;PCODE: $00000151 VOL: 0
; 0000 00CD 
; 0000 00CE case 0b11011011:
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 00CF while (PINB.5 == 0);
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 00D0 return 9;
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 00D1 break;
;PCODE: $0000015D VOL: 0
; 0000 00D2 
; 0000 00D3 case 0b10111011:
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 00D4 while (PINB.6 == 0);
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 00D5 return '#';
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00D6 break;
;PCODE: $00000169 VOL: 0
; 0000 00D7 
; 0000 00D8 }
;PCODE: $0000016A VOL: 0
; 0000 00D9 
; 0000 00DA }
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 00DB }
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;unsigned char EE_Read(unsigned int address)
; 0000 00E1 {
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 00E2 while(EECR.1 == 1);    //Wait till EEPROM is ready
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;	address -> R16,R17
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 00E3 EEAR = address;        //Prepare the address you want to read from
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 00E4 
; 0000 00E5 EECR.0 = 1;            //Execute read command
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00E6 
; 0000 00E7 return EEDR;
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 00E8 
; 0000 00E9 }
;PCODE: $00000181 VOL: 0
;void EE_Write(unsigned int address, unsigned int data)
; 0000 00ED {
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 00EE while(EECR.1 == 1);    //Wait till EEPROM is ready
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;	address -> R18,R19
;	data -> R16,R17
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 00EF EEAR = address;        //Prepare the address you want to read from
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 00F0 EEDR = data;           //Prepare the data you want to write in the address above
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 00F1 EECR.2 = 1;            //Master write enable
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 00F2 EECR.1 = 1;            //Write Enable
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 00F3 }
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;interrupt [2]  void init_0(void)
; 0000 00F8 
; 0000 00F9 {
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 00FA 
; 0000 00FB int pass = 0;
; 0000 00FC int pass1 = 0;
; 0000 00FD int new_pass = 0;
; 0000 00FE int id = 0;
; 0000 00FF 
; 0000 0100 lcd_clear();
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;	pass -> R16,R17
;	pass1 -> R18,R19
;	new_pass -> R20,R21
;	id -> Y+6
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 0101 lcd_puts("Enter Admin PC");
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 0102 pass = read();
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 0103 
; 0000 0104 
; 0000 0105 delay_ms(500);
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 0106 lcd_clear();
;PCODE: $000001B0 VOL: 0
; 0000 0107 if(check_PASS_Admin(pass) == 1)
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 0108 {
; 0000 0109 lcd_puts("Enter Student ID");
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 010A 
; 0000 010B id = read();
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 010C delay_ms(500);
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 010D lcd_clear();
;PCODE: $000001BC VOL: 0
; 0000 010E if(checkID(id) == 1)
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0000 010F {
; 0000 0110 lcd_puts("Enter new PC");
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 0111 
; 0000 0112 pass = read();
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 0113 
; 0000 0114 delay_ms(1000);
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 0115 delay_ms(500);
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 0116 lcd_clear();
;PCODE: $000001CA VOL: 0
; 0000 0117 pass1 = pass / 10;
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 0118 new_pass = pass1 * 10 + pass % 10;
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 0119 
; 0000 011A changePASS(id, pass);
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 011B 
; 0000 011C 
; 0000 011D delay_ms(500);
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 011E lcd_clear();
;PCODE: $000001DE VOL: 0
; 0000 011F 
; 0000 0120 lcd_puts("PC is stored");
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0000 0121 delay_ms(1000);
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 0122 lcd_clear();
;PCODE: $000001E4 VOL: 0
; 0000 0123 }
; 0000 0124 else
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 0125 {
; 0000 0126 lcd_puts("ID is not found");
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 0127 peep();
;PCODE: $000001EA VOL: 0
; 0000 0128 }
;PCODE: $000001EB VOL: 0
; 0000 0129 
; 0000 012A }
; 0000 012B else
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0000 012C {
; 0000 012D lcd_puts("Contact Admin");
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0000 012E delay_ms(500);
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 012F lcd_clear();
;PCODE: $000001F3 VOL: 0
; 0000 0130 peep();
;PCODE: $000001F4 VOL: 0
; 0000 0131 }
;PCODE: $000001F5 VOL: 0
; 0000 0132 
; 0000 0133 
; 0000 0134 }
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0

	.DSEG
_0x8F:
	.BYTE 0x58
;interrupt [3]  void init_1(void)
; 0000 0138 {

	.CSEG
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 0139 
; 0000 013A 
; 0000 013B int id = 0;
; 0000 013C int pass_new = 0;
; 0000 013D int new_pass1 = 0;
; 0000 013E int pass_old = 0;
; 0000 013F int pass2 = 0;
; 0000 0140 SREG.7 = 1;
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;	id -> R16,R17
;	pass_new -> R18,R19
;	new_pass1 -> R20,R21
;	pass_old -> Y+8
;	pass2 -> Y+6
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
; 0000 0141 lcd_clear();
;PCODE: $0000020E VOL: 0
; 0000 0142 lcd_puts("Enter ID");
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 0143 id = read();
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 0144 delay_ms(500);
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0000 0145 lcd_clear();
;PCODE: $00000216 VOL: 0
; 0000 0146 if(id == 111)
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
; 0000 0147 {
; 0000 0148 lcd_puts("you donnot have permission,Contact admin");
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 0149 peep();
;PCODE: $0000021D VOL: 0
; 0000 014A }
; 0000 014B else
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
; 0000 014C {
; 0000 014D if(checkID(id) == 0)
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
; 0000 014E {
; 0000 014F lcd_puts("contact admin"); delay_ms(500);
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
; 0000 0150 peep();
;PCODE: $00000229 VOL: 0
; 0000 0151 }
; 0000 0152 else
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
; 0000 0153 {
; 0000 0154 lcd_puts("Enter old PC"); delay_ms(500);
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0000 0155 pass_old = read();
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 0156 
; 0000 0157 
; 0000 0158 delay_ms(500);
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0000 0159 lcd_clear();
;PCODE: $00000235 VOL: 0
; 0000 015A 
; 0000 015B if(checkPASS(id, pass_old) != 1)
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 015C {
; 0000 015D lcd_puts("Wrong pass,  Contact admin");
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 015E peep();
;PCODE: $0000023E VOL: 0
; 0000 015F }
; 0000 0160 else
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
; 0000 0161 {
; 0000 0162 lcd_puts("Enter new PC");
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0000 0163 
; 0000 0164 
; 0000 0165 delay_ms(1000);
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
; 0000 0166 lcd_clear();
;PCODE: $00000246 VOL: 0
; 0000 0167 
; 0000 0168 pass_new = read();
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0000 0169 
; 0000 016A delay_ms(500);
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
; 0000 016B lcd_clear();
;PCODE: $0000024B VOL: 0
; 0000 016C lcd_puts("Renter PC");
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 016D pass_sure = read();
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
; 0000 016E 
; 0000 016F delay_ms(500);
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
; 0000 0170 lcd_clear();
;PCODE: $00000253 VOL: 0
; 0000 0171 if(pass_new == pass_sure)
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0000 0172 {
; 0000 0173 pass2 = pass_new / 10;
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 0174 new_pass1 = pass2 * 10 + pass_new % 10;
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 0175 
; 0000 0176 
; 0000 0177 changePASS(id, pass_new);
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 0178 lcd_puts("New PC stored");
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
; 0000 0179 delay_ms(500);
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
; 0000 017A lcd_clear();
;PCODE: $0000026C VOL: 0
; 0000 017B }
; 0000 017C else
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
; 0000 017D {
; 0000 017E lcd_puts("2 passwords arenot match,Contact admin");
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
; 0000 017F peep();
;PCODE: $00000272 VOL: 0
; 0000 0180 delay_ms(500);
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
; 0000 0181 lcd_clear();
;PCODE: $00000275 VOL: 0
; 0000 0182 }
;PCODE: $00000276 VOL: 0
; 0000 0183 
; 0000 0184 
; 0000 0185 }
;PCODE: $00000277 VOL: 0
; 0000 0186 
; 0000 0187 }
;PCODE: $00000278 VOL: 0
; 0000 0188 }
;PCODE: $00000279 VOL: 0
; 0000 0189 
; 0000 018A }
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0

	.DSEG
_0x94:
	.BYTE 0xB4
;void Store()
; 0000 018E {

	.CSEG
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
; 0000 018F EE_Write(111, 20); //devide  pass to 2 sections(2 bits ,1 bit)in 2 different Consecutive ids
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
; 0000 0190 EE_Write(112, 3);
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
; 0000 0191 
; 0000 0192 EE_Write(126, 12);
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
; 0000 0193 EE_Write(127, 9);
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
; 0000 0194 
; 0000 0195 EE_Write(128, 32);
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
; 0000 0196 EE_Write(129, 5);
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
; 0000 0197 
; 0000 0198 EE_Write(130, 42);
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
; 0000 0199 EE_Write(131, 6);
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
; 0000 019A 
; 0000 019B EE_Write(132, 07);
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 019C EE_Write(133, 9);
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0000 019D 
; 0000 019E 
; 0000 019F }
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;int checkID(unsigned int id)
; 0000 01A2 {
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
; 0000 01A3 if(EE_Read(id) != 255)
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;	id -> R16,R17
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
; 0000 01A4 return 1;
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 01A5 return 0;
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
; 0000 01A6 }
;PCODE: $000002C5 VOL: 0
;int checkPASS(unsigned int id, unsigned int pass)
; 0000 01A9 {
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0000 01AA if(EE_Read(id) == pass / 10 && EE_Read(id + 1) == pass % 10)
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;	id -> R18,R19
;	pass -> R16,R17
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
; 0000 01AB return 1;
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
; 0000 01AC return 0;
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
; 0000 01AD }
;PCODE: $000002EE VOL: 0
;int check_PASS_Admin(unsigned int pass)
; 0000 01AF {
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
; 0000 01B0 int admin_id = 111;
; 0000 01B1 if(EE_Read(admin_id) == pass / 10 && EE_Read(admin_id + 1) == pass % 10)
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;	pass -> R18,R19
;	admin_id -> R16,R17
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
; 0000 01B2 return 1;
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
; 0000 01B3 return 0;
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
; 0000 01B4 }
;PCODE: $00000317 VOL: 0
;int changePASS(unsigned int id, unsigned int npass)
; 0000 01B8 {
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
; 0000 01B9 EE_Write(id, npass / 10);
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;	id -> R18,R19
;	npass -> R16,R17
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
; 0000 01BA EE_Write(id + 1, npass % 10);
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
; 0000 01BB return 1;
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
; 0000 01BC 
; 0000 01BD }
;PCODE: $00000330 VOL: 0
;int read()
; 0000 01C0 {
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
; 0000 01C1 int i = 3 , c = 0, c1 = 0;
; 0000 01C2 while(i)
;PCODE: $00000333 VOL: 0
;	i -> R16,R17
;	c -> R18,R19
;	c1 -> R20,R21
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
; 0000 01C3 {
; 0000 01C4 c = keypad();
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
; 0000 01C5 
; 0000 01C6 lcd_clear();
;PCODE: $00000340 VOL: 0
; 0000 01C7 c1 = c1 * 10 + c;
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
; 0000 01C8 lcd_printf("%d ", c1);
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
; 0000 01C9 i = i - 1;
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
; 0000 01CA }
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
; 0000 01CB 
; 0000 01CC return c1;
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
; 0000 01CD 
; 0000 01CE 
; 0000 01CF 
; 0000 01D0 }
;PCODE: $00000358 VOL: 0
;void peep()
; 0000 01D4 {
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
; 0000 01D5 PORTC.1 = 1;
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
; 0000 01D6 delay_ms(1000);
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
; 0000 01D7 PORTC.1 = 0;         // two peeps instead of turning on lamp
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
; 0000 01D8 delay_ms(1000);
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
; 0000 01D9 PORTC.1 = 1;
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
; 0000 01DA delay_ms(1000);
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
; 0000 01DB PORTC.1 = 0;
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
; 0000 01DC delay_ms(1000);
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
; 0000 01DD }
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
